import timeit

def find_intersection(lines):
    """
    Find the point of intersection (if any) between any two lines in the given list.
    Each line equation is represented as y = mx + b, where m and b are floats.
    Return None if there is no intersection or if the lines are parallel (i.e., have the same slope).
    """
    for i in range(len(lines)):
        for j in range(i+1, len(lines)):
            # Get the slopes and y-intercepts of the two lines
            m1, b1 = lines[i]
            m2, b2 = lines[j]
            # Compute the x and y coordinates of the intersection point
            if m1 != m2:  # lines are not parallel
                x = (b2 - b1) / (m1 - m2)
                y = m1 * x + b1
                return (x, y)
    # No intersection found
    return None

# Example usage
lines = [(1, 7), (-1, 8), (2, -1)]
intersection = find_intersection(lines)
if intersection is not None:
    print("The lines intersect at:", intersection)
else:
    print("The lines do not intersect.")

t = timeit.timeit(lambda: find_intersection(lines), number=100000)
print("Execution time:", round(t, 5), "seconds")
